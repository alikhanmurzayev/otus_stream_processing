{
	"info": {
		"_postman_id": "154271b5-5d78-475c-a45c-975f56fa6abe",
		"name": "OTUS. Stream processing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"user first name\",\n    \"last_name\": \"user last name\",\n    \"login\": \"user\",\n    \"password\": \"user\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8888/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"token\", pm.response.headers.get(\"X-Auth-Token\"));",
							"",
							"pm.globals.set(\"x_user_id\", pm.response.headers.get(\"x-user-id\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"user\",\n    \"password\": \"user\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9999/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9999",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "top up account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Amount is 100\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.amount).to.eql(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7777/top-up",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7777",
					"path": [
						"top-up"
					]
				}
			},
			"response": []
		},
		{
			"name": "create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 60\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7776/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7776",
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "get account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Amount is 40\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.amount).to.eql(40);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7777/account",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7777",
					"path": [
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "get notifications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Last notification is happy\", function () {",
							"        var jsonData = pm.response.json();",
							"        var rows = jsonData.rows;",
							"        var row = rows[0];",
							"        pm.expect(row.text).to.include(\"happiness letter\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7775/find?page=0&size=-1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7775",
					"path": [
						"find"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create failing order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7776/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7776",
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "get account (not changed)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Amount is 40\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.amount).to.eql(40);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7777/account",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7777",
					"path": [
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "get notifications (about failure)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Last notification is happy\", function () {",
							"        var jsonData = pm.response.json();",
							"        var rows = jsonData.rows;",
							"        var row = rows[0];",
							"        pm.expect(row.text).to.include(\"grief letter\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7775/find?page=0&size=-1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7775",
					"path": [
						"find"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var Header = require('postman-collection').Header",
					"pm.request.headers.add(new Header(\"x-user-id: \" + pm.globals.get('x_user_id')))"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"disabled": true
		}
	]
}